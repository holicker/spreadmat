server.port: 8443

server.ssl:
  key-store-type: PKCS12
  key-store: classpath:edge.p12
  key-store-password: password
  key-alias: localhost

spring.application.name: gateway

app.eureka-server: localhost
app.auth-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka-server}:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
    reigster-with-eureka: true
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

ribbon.ServerListRefreshInterval: 5000
ribbon.NFLoadBalancerPingInterval: 5

management.endpoint.health.show-details: "ALWAYS"
management.endpoints.web.exposure.include: "*"

spring.cloud.gateway.routes:

- id: vendor
  uri: lb://vendor
  predicates:
  - Path=/vendor/**

- id: auth
  uri: lb://auth
  predicates:
  - Path=/oauth/**

- id: eureka-api
  uri: http://${app.eureka-server}:8761
  predicates:
  - Path=/eureka/api/{segment}
  filters:
  - SetPath=/eureka/{segment}

- id: eureka
  uri: http://${app.eureka-server}:8761
  predicates:
  - Path=/eureka
  filters:
  - SetPath=/

- id: host_route_200
  uri: http://httpstat.us
  predicates:
    - Host=i.feel.lucky:8080
    - Path=/headerrouting/**
  filters:
    - SetPath=/200

spring.cloud.gateway.globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:80"
            allow-credentials: true
            allowedHeaders:
              - x-requested-with
              - authorization
              - content-type
              - credential
              - X-AUTH-TOKEN
              - X-CSRF-TOKEN
            allowedMethods:
              - POST
              - GET
              - PUT
              - OPTIONS
              - DELETE

spring.security.oauth2.resourceserver.jwt.jwk-set-uri: http://${app.auth-server}:9999/.well-known/jwks.json


---

spring.profiles: docker

app.eureka-server: eureka
app.auth-server: auth


